import groovy.json.JsonOutput

def dlCoreUrl = "http://dl.freshdev.io/sdk/core/frsh-${version}.zip"
def dlTmplUrl = "http://dl.freshdev.io/sdk/freshdesk/template/plug-template-${version}.zip"

task pkg {
  // 1. exec_version creation:
  file("${buildDir}/config").mkdirs()
  file("${buildDir}/config/exec_version").text = "version=${version}"
  file("${buildDir}/config/exec_version.bat").text = "SET version=${version}"

  // 2. Fat zip creation:
  ant.zip(destfile: "${buildDir}/distributions/frshsdk-${version}.zip") {
    zipfileset(src: "sdk-update/build/distributions/frshsdk-${version}.zip")
    zipfileset(src: "sdk/build/distributions/frsh-${version}.zip",
      prefix: "frshsdk-${version}/sdk")
    zipfileset(dir: "${buildDir}/config", prefix: "frshsdk-${version}/config")
    zipfileset(dir: "template/build", includes: "plug-template.zip",
      prefix: "frshsdk-${version}/template")
  }

  // 3. Create version.json's:
  file("${buildDir}/ws").mkdirs()

  // 3.1. Create version.json:
  def json = JsonOutput.toJson([version: version, dl_url: dlCoreUrl])
  file("${buildDir}/ws/version.json").text = json

  // 3.2. Create template-version.json:
  json = JsonOutput.toJson([version: version, dl_url: dlTmplUrl])
  file("${buildDir}/ws/template-version.json").text = json
}
